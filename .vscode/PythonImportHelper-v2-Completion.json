[
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "IntegrityError",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "django.forms",
        "description": "django.forms",
        "isExtraImport": true,
        "detail": "django.forms",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponseRedirect",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "auctions.migrations.0001_initial",
        "description": "auctions.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"auth\", \"0012_alter_user_first_name_max_length\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"User\",\n            fields=[\n                (\"password\", models.CharField(max_length=128, verbose_name=\"password\")),",
        "detail": "auctions.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "auctions.migrations.0002_alter_listing_category",
        "description": "auctions.migrations.0002_alter_listing_category",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"auctions\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"listing\",\n            name=\"category\",\n            field=models.ForeignKey(\n                blank=True,",
        "detail": "auctions.migrations.0002_alter_listing_category",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "auctions.migrations.0003_alter_listing_category",
        "description": "auctions.migrations.0003_alter_listing_category",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"auctions\", \"0002_alter_listing_category\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"listing\",\n            name=\"category\",\n            field=models.ForeignKey(\n                null=True,",
        "detail": "auctions.migrations.0003_alter_listing_category",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "auctions.migrations.0004_alter_listing_description_alter_listing_image",
        "description": "auctions.migrations.0004_alter_listing_description_alter_listing_image",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"auctions\", \"0003_alter_listing_category\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"listing\",\n            name=\"description\",\n            field=models.CharField(blank=True, max_length=10000),\n        ),",
        "detail": "auctions.migrations.0004_alter_listing_description_alter_listing_image",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "auctions.migrations.0005_alter_listing_category_alter_listing_description_and_more",
        "description": "auctions.migrations.0005_alter_listing_category_alter_listing_description_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"auctions\", \"0004_alter_listing_description_alter_listing_image\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"listing\",\n            name=\"category\",\n            field=models.ForeignKey(\n                blank=True,",
        "detail": "auctions.migrations.0005_alter_listing_category_alter_listing_description_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "auctions.migrations.0006_listing_active_listing_watchers",
        "description": "auctions.migrations.0006_listing_active_listing_watchers",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"auctions\", \"0005_alter_listing_category_alter_listing_description_and_more\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"listing\",\n            name=\"active\",\n            field=models.BooleanField(default=True),\n        ),",
        "detail": "auctions.migrations.0006_listing_active_listing_watchers",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "auctions.migrations.0007_listing_winner_alter_listing_watchers",
        "description": "auctions.migrations.0007_listing_winner_alter_listing_watchers",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"auctions\", \"0006_listing_active_listing_watchers\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"listing\",\n            name=\"winner\",\n            field=models.ForeignKey(\n                blank=True,",
        "detail": "auctions.migrations.0007_listing_winner_alter_listing_watchers",
        "documentation": {}
    },
    {
        "label": "CategoryAdmin",
        "kind": 6,
        "importPath": "auctions.admin",
        "description": "auctions.admin",
        "peekOfCode": "class CategoryAdmin(admin.ModelAdmin):\n    list_display = (\"category_id\", \"type\")\nclass ListingAdmin(admin.ModelAdmin):\n    list_display = (\n        \"listing_id\", \n        \"title\",\n        \"price\",\n        \"user\",\n        \"category\",\n        \"winner\",",
        "detail": "auctions.admin",
        "documentation": {}
    },
    {
        "label": "ListingAdmin",
        "kind": 6,
        "importPath": "auctions.admin",
        "description": "auctions.admin",
        "peekOfCode": "class ListingAdmin(admin.ModelAdmin):\n    list_display = (\n        \"listing_id\", \n        \"title\",\n        \"price\",\n        \"user\",\n        \"category\",\n        \"winner\",\n        \"active\"\n    )",
        "detail": "auctions.admin",
        "documentation": {}
    },
    {
        "label": "BidAdmin",
        "kind": 6,
        "importPath": "auctions.admin",
        "description": "auctions.admin",
        "peekOfCode": "class BidAdmin(admin.ModelAdmin):\n    list_display = (\n        \"amount\",\n        \"listing\",\n        \"user\"\n    )\nclass CommentAdmin(admin.ModelAdmin):\n    list_display = (\n        \"listing\",\n        \"user\",",
        "detail": "auctions.admin",
        "documentation": {}
    },
    {
        "label": "CommentAdmin",
        "kind": 6,
        "importPath": "auctions.admin",
        "description": "auctions.admin",
        "peekOfCode": "class CommentAdmin(admin.ModelAdmin):\n    list_display = (\n        \"listing\",\n        \"user\",\n        \"description\"\n    )\nadmin.site.register(Category, CategoryAdmin)\nadmin.site.register(User)\nadmin.site.register(Listing, ListingAdmin)\nadmin.site.register(Bid, BidAdmin)",
        "detail": "auctions.admin",
        "documentation": {}
    },
    {
        "label": "AuctionsConfig",
        "kind": 6,
        "importPath": "auctions.apps",
        "description": "auctions.apps",
        "peekOfCode": "class AuctionsConfig(AppConfig):\n    name = 'auctions'",
        "detail": "auctions.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "auctions.models",
        "description": "auctions.models",
        "peekOfCode": "class User(AbstractUser):\n    user_id = models.AutoField(primary_key=True, editable=False)\n    def __str__(self):\n        return f\"{self.username}\"\nclass Category(models.Model):\n    category_id = models.AutoField(primary_key=True, editable=False)\n    type = models.CharField(max_length=64)\n    def __str__(self):\n        return f\"{self.type}\"\nclass Listing(models.Model):",
        "detail": "auctions.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": "auctions.models",
        "description": "auctions.models",
        "peekOfCode": "class Category(models.Model):\n    category_id = models.AutoField(primary_key=True, editable=False)\n    type = models.CharField(max_length=64)\n    def __str__(self):\n        return f\"{self.type}\"\nclass Listing(models.Model):\n    listing_id = models.AutoField(primary_key=True, editable=False)\n    title = models.CharField(max_length=100, null=False)\n    price = models.DecimalField(max_digits=10, decimal_places=2, null=False )\n    time = models.DateTimeField(auto_now=True)",
        "detail": "auctions.models",
        "documentation": {}
    },
    {
        "label": "Listing",
        "kind": 6,
        "importPath": "auctions.models",
        "description": "auctions.models",
        "peekOfCode": "class Listing(models.Model):\n    listing_id = models.AutoField(primary_key=True, editable=False)\n    title = models.CharField(max_length=100, null=False)\n    price = models.DecimalField(max_digits=10, decimal_places=2, null=False )\n    time = models.DateTimeField(auto_now=True)\n    user = models.ForeignKey(User, on_delete=models.CASCADE, default=1)\n    category = models.ForeignKey(Category, on_delete=models.CASCADE, null=True, blank=True)\n    description = models.CharField(max_length = 10000, null=True, blank=True)\n    image = models.CharField(max_length=1000, null=True, blank=True)\n    active = models.BooleanField(default=True)",
        "detail": "auctions.models",
        "documentation": {}
    },
    {
        "label": "Bid",
        "kind": 6,
        "importPath": "auctions.models",
        "description": "auctions.models",
        "peekOfCode": "class Bid(models.Model):\n    bid_id = models.AutoField(primary_key=True, editable=False)\n    time = models.DateTimeField(auto_now=True)\n    amount = models.DecimalField(max_digits=10, decimal_places=2)\n    listing = models.ForeignKey(Listing, on_delete=models.CASCADE, related_name=\"allbids\", default=1)\n    user = models.ForeignKey(User, on_delete=models.CASCADE, default=1)\n    def __str__(self):\n        return f\"{self.user}: {self.amount} on {self.listing.title}\"\nclass Comment(models.Model):\n    comment_id = models.AutoField(primary_key=True, editable=False)",
        "detail": "auctions.models",
        "documentation": {}
    },
    {
        "label": "Comment",
        "kind": 6,
        "importPath": "auctions.models",
        "description": "auctions.models",
        "peekOfCode": "class Comment(models.Model):\n    comment_id = models.AutoField(primary_key=True, editable=False)\n    time = models.DateTimeField(auto_now=True)\n    listing = models.ForeignKey(Listing, on_delete=models.CASCADE, related_name=\"allcomments\", default=1)\n    user = models.ForeignKey(User, on_delete=models.CASCADE, default=1)\n    description = models.CharField(max_length = 10000, default=\"comment text\")\n    def __str__(self):\n        return f\"{self.user}: {self.description} on {self.listing.title}\"",
        "detail": "auctions.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "auctions.urls",
        "description": "auctions.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", views.index, name=\"index\"),\n    path(\"login\", views.login_view, name=\"login\"),\n    path(\"logout\", views.logout_view, name=\"logout\"),\n    path(\"register\", views.register, name=\"register\"),\n    path(\"categories/\", views.categories, name=\"categories\"),\n    path(\"categories/<str:type>\", views.category, name=\"category\"),\n    path(\"watchlist\", views.watchlist, name=\"watchlist\"),\n    path(\"create\", views.create, name=\"create\"),\n    path(\"listing/<int:num>\", views.listing, name=\"listing\"),",
        "detail": "auctions.urls",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "auctions.views",
        "description": "auctions.views",
        "peekOfCode": "def index(request):\n    listings = Listing.objects.filter(active=True).order_by(\"-time\")\n    return render(request, \"auctions/index.html\", {\n        \"listings\": listings,\n        \"page_text\": \"Active Listings\"\n    })\ndef login_view(request):\n    if request.method == \"POST\":\n        # Attempt to sign user in\n        username = request.POST[\"username\"]",
        "detail": "auctions.views",
        "documentation": {}
    },
    {
        "label": "login_view",
        "kind": 2,
        "importPath": "auctions.views",
        "description": "auctions.views",
        "peekOfCode": "def login_view(request):\n    if request.method == \"POST\":\n        # Attempt to sign user in\n        username = request.POST[\"username\"]\n        password = request.POST[\"password\"]\n        user = authenticate(request, username=username, password=password)\n        # Check if authentication successful\n        if user is not None:\n            login(request, user)\n            return HttpResponseRedirect(reverse(\"index\"))",
        "detail": "auctions.views",
        "documentation": {}
    },
    {
        "label": "logout_view",
        "kind": 2,
        "importPath": "auctions.views",
        "description": "auctions.views",
        "peekOfCode": "def logout_view(request):\n    logout(request)\n    return HttpResponseRedirect(reverse(\"index\"))\ndef register(request):\n    if request.method == \"POST\":\n        username = request.POST[\"username\"]\n        email = request.POST[\"email\"]\n        # Ensure password matches confirmation\n        password = request.POST[\"password\"]\n        confirmation = request.POST[\"confirmation\"]",
        "detail": "auctions.views",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 2,
        "importPath": "auctions.views",
        "description": "auctions.views",
        "peekOfCode": "def register(request):\n    if request.method == \"POST\":\n        username = request.POST[\"username\"]\n        email = request.POST[\"email\"]\n        # Ensure password matches confirmation\n        password = request.POST[\"password\"]\n        confirmation = request.POST[\"confirmation\"]\n        if password != confirmation:\n            return render(request, \"auctions/register.html\", {\n                \"message\": \"Passwords must match.\"",
        "detail": "auctions.views",
        "documentation": {}
    },
    {
        "label": "categories",
        "kind": 2,
        "importPath": "auctions.views",
        "description": "auctions.views",
        "peekOfCode": "def categories(request):\n    categories = Category.objects.all().order_by(\"type\")\n    return render(request, \"auctions/categories.html\", {\n        \"categories\": categories\n    })\ndef category(request, type):\n    if type.lower() == \"unspecified\":\n        listings = Listing.objects.filter(category=None).filter(active=True).order_by(\"-time\")\n        return render(request, \"auctions/index.html\", {\n            \"page_text\": \"Unspecified\",",
        "detail": "auctions.views",
        "documentation": {}
    },
    {
        "label": "category",
        "kind": 2,
        "importPath": "auctions.views",
        "description": "auctions.views",
        "peekOfCode": "def category(request, type):\n    if type.lower() == \"unspecified\":\n        listings = Listing.objects.filter(category=None).filter(active=True).order_by(\"-time\")\n        return render(request, \"auctions/index.html\", {\n            \"page_text\": \"Unspecified\",\n            \"listings\": listings\n        })\n    categories = Category.objects.all().values()\n    for i in categories:\n        if type.lower() == i[\"type\"].lower():",
        "detail": "auctions.views",
        "documentation": {}
    },
    {
        "label": "watchlist",
        "kind": 2,
        "importPath": "auctions.views",
        "description": "auctions.views",
        "peekOfCode": "def watchlist(request):\n    listings = Listing.objects.filter(watchers=request.user).filter(active=True)\n    return render(request, \"auctions/index.html\", {\n        \"page_text\": \"Watchlist\",\n        \"listings\": listings\n    })\n@login_required(login_url=\"login\")\ndef create(request):\n    if request.method == \"POST\":\n        image = request.POST[\"image\"]",
        "detail": "auctions.views",
        "documentation": {}
    },
    {
        "label": "create",
        "kind": 2,
        "importPath": "auctions.views",
        "description": "auctions.views",
        "peekOfCode": "def create(request):\n    if request.method == \"POST\":\n        image = request.POST[\"image\"]\n        description = request.POST[\"description\"]\n        if \"category\" in request.POST:\n            category=request.POST[\"category\"]\n            category=Category.objects.get(category_id=category)\n        else:\n            category=None\n        if request.POST[\"title\"] != \"\":",
        "detail": "auctions.views",
        "documentation": {}
    },
    {
        "label": "listing",
        "kind": 2,
        "importPath": "auctions.views",
        "description": "auctions.views",
        "peekOfCode": "def listing(request, num):\n    if request.method == \"POST\":\n        item = Listing.objects.get(listing_id=num)\n        user = request.user\n        watchers = item.watchers.all()\n        comments= Comment.objects.filter(listing=item).order_by(\"-time\")\n        bid_count = Bid.objects.filter(listing=item).count()\n        try:\n            recent_bidder = Bid.objects.filter(listing=item).order_by(\"-time\").first().user\n        except AttributeError:",
        "detail": "auctions.views",
        "documentation": {}
    },
    {
        "label": "winnings",
        "kind": 2,
        "importPath": "auctions.views",
        "description": "auctions.views",
        "peekOfCode": "def winnings(request):\n    listings = Listing.objects.filter(winner=request.user)\n    return render(request, \"auctions/index.html\", {\n        \"page_text\": \"Winnings\",\n        \"listings\": listings\n    })",
        "detail": "auctions.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "commerce.asgi",
        "description": "commerce.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "commerce.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "commerce.settings",
        "description": "commerce.settings",
        "peekOfCode": "BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = '6ps8j!crjgrxt34cqbqn7x&b3y%(fny8k8nh21+qa)%ws3fh!q'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "commerce.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "commerce.settings",
        "description": "commerce.settings",
        "peekOfCode": "SECRET_KEY = '6ps8j!crjgrxt34cqbqn7x&b3y%(fny8k8nh21+qa)%ws3fh!q'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'auctions',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "commerce.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "commerce.settings",
        "description": "commerce.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'auctions',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "commerce.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "commerce.settings",
        "description": "commerce.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'auctions',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "commerce.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "commerce.settings",
        "description": "commerce.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'auctions',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n]\nMIDDLEWARE = [",
        "detail": "commerce.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "commerce.settings",
        "description": "commerce.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'commerce.urls'",
        "detail": "commerce.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "commerce.settings",
        "description": "commerce.settings",
        "peekOfCode": "ROOT_URLCONF = 'commerce.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "commerce.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "commerce.settings",
        "description": "commerce.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "commerce.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "commerce.settings",
        "description": "commerce.settings",
        "peekOfCode": "WSGI_APPLICATION = 'commerce.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/3.0/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\nAUTH_USER_MODEL = 'auctions.User'",
        "detail": "commerce.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "commerce.settings",
        "description": "commerce.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\nAUTH_USER_MODEL = 'auctions.User'\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [",
        "detail": "commerce.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "commerce.settings",
        "description": "commerce.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'auctions.User'\n# Password validation\n# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },",
        "detail": "commerce.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "commerce.settings",
        "description": "commerce.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "commerce.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "commerce.settings",
        "description": "commerce.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\nSTATIC_URL = '/static/'\nDEFAULT_AUTO_FIELD='django.db.models.AutoField'",
        "detail": "commerce.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "commerce.settings",
        "description": "commerce.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\nSTATIC_URL = '/static/'\nDEFAULT_AUTO_FIELD='django.db.models.AutoField'",
        "detail": "commerce.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "commerce.settings",
        "description": "commerce.settings",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\nSTATIC_URL = '/static/'\nDEFAULT_AUTO_FIELD='django.db.models.AutoField'",
        "detail": "commerce.settings",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "commerce.settings",
        "description": "commerce.settings",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\nSTATIC_URL = '/static/'\nDEFAULT_AUTO_FIELD='django.db.models.AutoField'",
        "detail": "commerce.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "commerce.settings",
        "description": "commerce.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.0/howto/static-files/\nSTATIC_URL = '/static/'\nDEFAULT_AUTO_FIELD='django.db.models.AutoField'",
        "detail": "commerce.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "commerce.settings",
        "description": "commerce.settings",
        "peekOfCode": "STATIC_URL = '/static/'\nDEFAULT_AUTO_FIELD='django.db.models.AutoField'",
        "detail": "commerce.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "commerce.urls",
        "description": "commerce.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path(\"\", include(\"auctions.urls\"))\n]",
        "detail": "commerce.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "commerce.wsgi",
        "description": "commerce.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "commerce.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'commerce.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc",
        "detail": "manage",
        "documentation": {}
    }
]